@page "/home"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@using MudBlazor
@layout MainLayout
@inject HttpClient Http
@inject NavigationManager Nav
@inject IJSRuntime JS


<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="p-6">

    <!-- WELCOME HEADER -->
    <MudPaper Class="mx-auto mb-1" Style="background:white; border-radius:16px; width:100%;">
        <MudText Typo="Typo.h2" Align="Align.Center" Style="color:black; margin-bottom:20px">
            Welcome, @user?.FullName!
        </MudText>
    </MudPaper>

    <MudGrid GutterSize="2">
        <!-- ACCOUNTS (Left Column) -->
        <MudItem md="6">
            <MudPaper Class="p-4" Style="border-radius:20px; height:400px; background:#F5F5F5;">
                <MudText Typo="Typo.h5" Class="mb-3" Style="color:#004B93;">Your Accounts</MudText>
                <MudTable Items="@accountRows" Hover="true" Dense="true" Style="background:white; border-radius:12px;">
                    <HeaderContent>
                        <MudTh>Hesap Türü</MudTh>
                        <MudTh>Para Birimi</MudTh>
                        <MudTh>Bakiye</MudTh>
                        <MudTh>IBAN</MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd>@context.AccountType</MudTd>
                        <MudTd>@context.CurrencyCode</MudTd>
                        <MudTd>@context.Balance</MudTd>
                        <MudTd>@context.IBAN</MudTd>
                    </RowTemplate>
                </MudTable>
            </MudPaper>
        </MudItem>

        <!-- CARDS (Right Column) -->
        <MudItem md="6">
            <MudPaper Class="p-4" Style="border-radius:20px; height:400px; background:#F5F5F5;">
                <MudText Typo="Typo.h5" Class="mb-3" Style="color:#004B93;">Your Cards</MudText>
                <MudGrid GutterSize="2">
                    @* cards go here *@
                </MudGrid>
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>


@code {
    private UserProfileModel? user;

    private bool isLoaded = false;
    private List<AccountRow> accountRows = new();

    protected override async Task OnInitializedAsync()
    {
        var token = await JS.InvokeAsync<string>("sessionStorage.getItem", "authToken");
        if (!string.IsNullOrWhiteSpace(token))
            Http.DefaultRequestHeaders.Authorization =
                new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);        

        try
        {
            user = await Http.GetFromJsonAsync<UserProfileModel>("api/user/me");
            for (int i = 0; i < user.AccountTypes.Count; i++)
            {
                accountRows.Add(new AccountRow
                {
                    AccountType = user.AccountTypes[i],
					CurrencyCode = user.CurrencyCode[i],
                    IBAN = user.IBANs[i],
                    Balance = user.Balances[i]
                });
            }
        }
        finally
        {
            isLoaded = true;
            StateHasChanged();
        }
    }

    public class UserProfileModel
    {
        public int ID { get; set; }
        public string Username { get; set; }
        public string FullName { get; set; }
        public string Email { get; set; }
        public DateTime CreatedAt { get; set; }
        public List<int> AccountIDs { get; set; }
        public List<string> AccountTypes { get; set; }
        public List<string> IBANs { get; set; }
        public List<decimal> Balances { get; set; }
        public List<DateTime> AccountCreatedDates { get; set; }
        public List<string> CurrencyCode { get; set; }
    }

    public class AccountRow
    {
        public string AccountType { get; set; }
		public string CurrencyCode { get; set; }
        public string IBAN { get; set; }
        public decimal Balance { get; set; }
    }
}